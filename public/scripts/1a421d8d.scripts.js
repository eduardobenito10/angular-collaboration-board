"use strict";angular.module("angularPassportApp",["ngCookies","ngResource","ngSanitize","ngRoute","http-auth-interceptor","ui.bootstrap"]).config(["$routeProvider","$locationProvider",function(a,b){a.when("/",{templateUrl:"partials/main.html",controller:"MainCtrl"}).when("/blogs",{templateUrl:"partials/blogs/list.html",controller:"BlogsCtrl"}).when("/blogs/create",{templateUrl:"partials/blogs/create.html",controller:"BlogsCtrl"}).when("/blogs/:blogId/edit",{templateUrl:"partials/blogs/edit.html",controller:"BlogsCtrl"}).when("/blogs/:blogId",{templateUrl:"partials/blogs/view.html",controller:"BlogsCtrl"}).when("/boards",{templateUrl:"partials/boards/list.html",controller:"BoardsCtrl"}).when("/boards/create",{templateUrl:"partials/boards/create.html",controller:"BoardsCtrl"}).when("/boards/:boardId/edit",{templateUrl:"partials/boards/edit.html",controller:"BoardsCtrl"}).when("/boards/:boardId",{templateUrl:"partials/boards/view.html",controller:"BoardsCtrl"}).when("/login",{templateUrl:"partials/login.html",controller:"LoginCtrl"}).when("/signup",{templateUrl:"partials/signup.html",controller:"SignupCtrl"}).otherwise({redirectTo:"/"}),b.html5Mode(!0)}]).run(["$rootScope","$location","Auth",function(a,b,c){a.$watch("currentUser",function(a){a||-1!=["/","/login","/logout","/signup"].indexOf(b.path())||c.currentUser()}),a.$on("event:auth-loginRequired",function(){return b.path("/login"),!1})}]),angular.module("angularPassportApp").controller("MainCtrl",["$scope","socket",function(){}]),angular.module("angularPassportApp").controller("LoginCtrl",["$scope","Auth","$location",function(a,b,c){a.error={},a.user={},a.login=function(d){b.login("password",{email:a.user.email,password:a.user.password},function(b){a.errors={},b?(angular.forEach(b.errors,function(b,c){d[c].$setValidity("mongoose",!1),a.errors[c]=b.type}),a.error.other=b.message):c.path("/")})}}]),angular.module("angularPassportApp").controller("NavbarCtrl",["$scope","Auth","$location",function(a,b,c){a.menu=[{title:"Boards",link:"boards"}],a.authMenu=[{title:"Create New Board",link:"boards/create"}],a.logout=function(){b.logout(function(a){a||c.path("/login")})}}]),angular.module("angularPassportApp").controller("SignupCtrl",["$scope","Auth","$location",function(a,b,c){a.register=function(d){b.createUser({email:a.user.email,username:a.user.username,password:a.user.password},function(b){a.errors={},b?angular.forEach(b.errors,function(b,c){d[c].$setValidity("mongoose",!1),a.errors[c]=b.type}):c.path("/")})}}]),angular.module("angularPassportApp").controller("BlogsCtrl",["$scope","Blogs","$location","$routeParams","$rootScope",function(a,b,c,d){a.create=function(){var a=new b({title:this.title,content:this.content});a.$save(function(a){c.path("blogs/"+a._id)}),this.title="",this.content=""},a.remove=function(b){b.$remove();for(var c in a.blogs)a.blogs[c]==b&&a.blogs.splice(c,1)},a.update=function(){var b=a.blog;b.$update(function(){c.path("blogs/"+b._id)})},a.find=function(){b.query(function(b){a.blogs=b})},a.findOne=function(){b.get({blogId:d.blogId},function(b){a.blog=b})}}]),angular.module("angularPassportApp").controller("BoardsCtrl",["$scope","Boards","UserService","$location","$routeParams","$rootScope","socket",function(a,b,c,d,e,f,g){a.allUsers=[];var h=c.getUsers();h.then(function(b){a.allUsers=b}),a.toggleSelection=function(b){var c=a.allowedUsers.indexOf(b);c>-1?a.allowedUsers.splice(c,1):a.allowedUsers.push(b)},a.allowedUsers=[],a.access="public",a.create=function(){var c=new b({title:this.title,content:this.content,users:a.allowedUsers,access:a.access});c.$save(function(a){d.path("boards/"+a._id)}),this.title="",this.content=""},a.remove=function(b){b.$remove();for(var c in a.boards)a.boards[c]==b&&a.boards.splice(c,1)},a.update=function(){var b=a.board;b.users=a.allowedUsers,b.$update(function(){d.path("boards/"+b._id)})},a.find=function(){b.query(function(b){a.boards=b})},a.findOne=function(){b.get({boardId:e.boardId},function(b){a.board=b,a.allowedUsers=b.users,console.info("load"),g.emit("load",b)})}}]),angular.module("angularPassportApp").controller("NotesCtrl",["$scope","Notes","UserService","$routeParams","socket",function(a,b,c,d,e){a.notes=[],b.query({boardId:d.boardId},function(b){a.notes=b});var f=c.getUsers();f.then(function(b){a.users=b}),e.on("onNoteCreated",function(b){console.info("onNoteCreated"),a.notes.push(b)}),e.on("onNoteDeleted",function(b){a.handleDeletedNoted(b._id)}),a.createNote=function(a){var b={text:"New Note",y:"50",x:"10",author:"",complete:!1,board:a};console.log(b),e.emit("createNote",b)},a.deleteNote=function(b){a.handleDeletedNoted(b),e.emit("deleteNote",{_id:b})},a.handleDeletedNoted=function(b){var c=a.notes,d=[];angular.forEach(c,function(a){a._id!==b&&d.push(a)}),a.notes=d},a.updateNote=function(a){e.emit("updateNote",a)}}]),angular.module("angularPassportApp").directive("uniqueUsername",["$http",function(a){return{restrict:"A",require:"ngModel",link:function(b,c,d,e){function f(b){return b?void a.get("/auth/check_username/"+b).success(function(a){a.exists?e.$setValidity("unique",!1):e.$setValidity("unique",!0)}):void e.$setValidity("unique",!0)}b.$watch(function(){return e.$viewValue},f)}}}]),angular.module("angularPassportApp").factory("socket",["$rootScope",function(a){var b=io.connect(window.location.hostname);return{on:function(c,d){b.on(c,function(){var c=arguments;a.$apply(function(){d.apply(b,c)})})},emit:function(c,d,e){b.emit(c,d,function(){var c=arguments;a.$apply(function(){e&&e.apply(b,c)})})}}}]),angular.module("angularPassportApp").factory("Auth",["$location","$rootScope","Session","User","$cookieStore",function(a,b,c,d,e){return b.currentUser=e.get("user")||null,e.remove("user"),{login:function(a,d,e){var f=e||angular.noop;c.save({provider:a,email:d.email,password:d.password,rememberMe:d.rememberMe},function(a){return b.currentUser=a,f()},function(a){return f(a.data)})},logout:function(a){var d=a||angular.noop;c.delete(function(){return b.currentUser=null,d()},function(a){return d(a.data)})},createUser:function(a,c){var e=c||angular.noop;d.save(a,function(a){return b.currentUser=a,e()},function(a){return e(a.data)})},currentUser:function(){c.get(function(a){b.currentUser=a})},changePassword:function(a,b,c,e){var f=e||angular.noop;d.update({email:a,oldPassword:b,newPassword:c},function(){return console.log("password changed"),f()},function(a){return f(a.data)})},removeUser:function(a,b,c){var e=c||angular.noop;d.delete({email:a,password:b},function(a){return console.log(a+"removed"),e()},function(a){return e(a.data)})}}}]),angular.module("angularPassportApp").factory("User",["$resource",function(a){return a("/auth/users/:id/",{},{update:{method:"PUT"}})}]).service("UserService",["$rootScope","$http","$q",function(a,b,c){return{getUsers:function(){var a=c.defer();return b.get("/api/users").success(function(b){a.resolve(b)}).error(function(b){a.reject(b)}),a.promise}}}]),angular.module("angularPassportApp").constant("focusConfig",{focusClass:"focused"}).directive("onFocus",["focusConfig",function(a){return{restrict:"A",require:"ngModel",link:function(b,c,d,e){e.$focused=!1,c.bind("focus",function(){c.addClass(a.focusClass),b.$apply(function(){e.$focused=!0})}).bind("blur",function(){c.removeClass(a.focusClass),b.$apply(function(){e.$focused=!1})})}}}]),angular.module("angularPassportApp").directive("mongooseError",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){b.on("keydown",function(){return d.$setValidity("mongoose",!0)})}}}),angular.module("angularPassportApp").factory("Session",["$resource",function(a){return a("/auth/session/")}]),angular.module("angularPassportApp").factory("Blogs",["$resource",function(a){return a("api/blogs/:blogId",{blogId:"@_id"},{update:{method:"PUT"}})}]),angular.module("angularPassportApp").factory("Boards",["$resource",function(a){return a("api/boards/:boardId",{boardId:"@_id"},{update:{method:"PUT"}})}]),angular.module("angularPassportApp").factory("Notes",["$resource",function(a){return a("api/notes/:boardId",{boardId:"@_id"},{update:{method:"PUT"}})}]),angular.module("angularPassportApp").directive("stickyNote",["socket",function(a){var b=function(b,c){c.draggable({stop:function(c,d){a.emit("moveNote",{_id:b.note._id,x:d.position.left,y:d.position.top})}}),a.on("onNoteMoved",function(a){a._id==b.note._id&&c.animate({left:a.x,top:a.y})}),c.css("left","10px"),c.css("top","50px"),c.hide().fadeIn()};return{restrict:"A",link:b,scope:{note:"=",ondelete:"&",board:"="}}}]);